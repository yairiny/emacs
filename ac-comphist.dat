(((":y" .
   [1 0])
  ("does-email-password-match?" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("password" .
   [1 0 0 0 0 0 0 0])
  ("email" .
   [1 0 0 0 0])
  (":pre" .
   [1 0 0 0])
  ("r/fold" .
   [0 0 0 0 0 1])
  ("rand-int" .
   [0 0 0 0 0 0 0 1])
  ("repeatedly" .
   [0 0 0 0 0 0 0 0 2 0])
  ("constantly" .
   [0 0 0 0 0 0 0 1 0 0])
  ("println" .
   [3 0 0 0 0 0 0])
  ("dotimes" .
   [1 0 0 0 0 0 0])
  ("generate-world" .
   [1 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("doto" .
   [0 0 1 0])
  ("cols" .
   [2 0 0 0])
  ("world-size" .
   [1 0 1 0 0 0 1 0 0 0])
  ("empty" .
   [0 0 0 0 1])
  ("create-maze" .
   [3 0 0 0 0 0 0 0 1 0 0])
  ("recur" .
   [2 0 0 0 0])
  ("clojure.set" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("new-maze" .
   [1 0 0 0 1 0 0 0])
  ("exposed-minus-rand" .
   [0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0])
  ("clojure.set/difference" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("maze2" .
   [5 0 0 0 0])
  (":cut" .
   [2 0 0 0])
  (":exposed" .
   [7 0 0 0 0 0 0 0])
  ("potential-exposed-and-cut" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("cut-maze" .
   [2 0 0 1 0 0 0 0])
  ("potential-new-exposed" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("clojure.set/intersection" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0])
  ("clojure.set/join" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("clojure.set/union" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("rand-exposed" .
   [6 0 0 0 0 0 0 0 0 0 0 0])
  ("w" .
   [1])
  ("exposed-loc" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("exposed-tile" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("disj" .
   [0 0 0 1])
  ("remove" .
   [0 0 0 0 0 1])
  ("rand-nth" .
   [1 0 0 0 0 0 0 0])
  ("exposed" .
   [8 0 0 0 0 0 0])
  ("initial-exposed" .
   [3 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":floor" .
   [2 0 0 0 0 0])
  ("maze" .
   [27 0 0 1])
  ("pprint" .
   [19 0 0 0 0 0])
  ("all-wall" .
   [1 0 0 0 0 0 0 0])
  ("start-maze-world" .
   [0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0])
  ("all-tiles" .
   [3 0 0 0 0 0 0 0 0])
  (":wall" .
   [1 0 0 0 0])
  ("repeat" .
   [1 0 0 0 0 1])
  ("get-potential-exposed-square" .
   [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("vec" .
   [4 0 0])
  ("concat" .
   [1 0 0 0 0 0])
  ("height" .
   [18 0 0 0 0 0])
  ("width" .
   [17 0 0 0 0])
  ("#_" .
   [5 0])
  (":kind" .
   [1 0 0 0 0])
  ("draw-game" .
   [2 0 0 0 0 0 0 0 0])
  ("let" .
   [2 0 0])
  ("get-tile" .
   [3 0 0 0 0 0 0 0])
  (":tiles" .
   [6 0 0 0 0 0])
  ("get" .
   [1 0 0])
  ("vals" .
   [2 0 0 0])
  ("map" .
   [10 0 0])
  ("colour" .
   [6 0 0 0 1 0])
  ("glyph" .
   [4 0 0 0 1])
  (":keys" .
   [2 0 0 0 0])
  ("w/get-tile" .
   [2 0 0 0 0 0 0 0 0 0])
  ("vstart-y" .
   [4 0 0 0 0 0 0 0])
  ("vcols" .
   [1 0 0 0 0])
  ("vstart-x" .
   [2 0 1 0 0 0 1 1])
  ("range" .
   [6 0 0 0 0])
  ("rows" .
   [4 0 0 0])
  ("nil" .
   [10 0 0])
  ("w/generate-world" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("s/put-string" .
   [4 0 0 0 0 0 0 0 0 0 0 0])
  ("w/pp" .
   [0 0 2 0])
  ("mapv" .
   [3 0 0 0])
  ("first" .
   [2 0 0 0 0])
  ("count" .
   [5 0 0 0 0])
  ("take" .
   [5 0 0 0])
  ("class" .
   [1 0 0 0 1])
  (":world" .
   [11 0 0 0 0 0])
  ("get-in" .
   [7 0 0 0 0 0])
  ("tiles" .
   [25 0 0 0 0])
  ("screen-size" .
   [0 0 0 0 1 3 1 0 0 0 0])
  ("ui" .
   [1 0])
  (":play" .
   [3 0 0 0 0])
  ("draw-ui" .
   [4 0 0 0 0 0 0])
  ("->Game" .
   [1 0 0 0 0 0])
  (":lose" .
   [1 0 0 0 0])
  ("-" .
   [1])
  (":win" .
   [1 0 0 0])
  (":uis" .
   [5 0 0 0])
  (":enter" .
   [1 0 0 0 0 0])
  ("input" .
   [2 0 0 0 0])
  ("game" .
   [22 0 0 0])
  ("process-input" .
   [4 0 0 0 0 1 0 1 0 0 0 0 0])
  ("keys" .
   [10 0 0 0])
  ("new-game" .
   [5 0 0 0 0 0 1 0])
  (":as" .
   [4 0 0])
  ("roguelike.world" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("type" .
   [10 0 0 0])
  ("apply-any-transforms" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("create-keys-clause" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("ks->strings" .
   [1 0 0 0 0 1 0 0 0 0 0])
  ("clojure.pprint" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("ins-keys" .
   [1 0 0 0 0 0 0 0])
  ("ent" .
   [1 0 0])
  ("ks" .
   [4 0])
  ("keys-clause" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("str" .
   [1 0 0])
  (":type" .
   [3 0 0 0 0])
  ("field-change-transforms" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("defentity" .
   [1 0 0 0 0 0 0 0 0])
  ("test1" .
   [17 0 0 0 0])
  ("assoc" .
   [2 0 0 0 0])
  ("*1" .
   [14 0])
  ("conj" .
   [5 0 0 0])
  ("assoc-in" .
   [3 0 0 0 0 0 0 0])
  ("update-in" .
   [2 0 0 0 0 0 0 0 0])
  ("func" .
   [1 0 0 0])
  ("query" .
   [6 0 0 0 0])
  ("clojure.pprint/pprint" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("smex" .
   [1 0 0 0])
  ("stop-app" .
   [1 0 0 0 0 0 0 0])
  ("start-app" .
   [0 0 0 1 0 0 0 0 0])
  ("def" .
   [2 0 0])
  ("lambda" .
   [1 0 0 0 0 0])
  ("add-hook" .
   [0 0 0 0 0 1 0 1])
  ("clojure-mode-hook" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("nrepl-mode-hook" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("esk-pretty-fn" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("in-ns" .
   [1 0 0 0 0])
  ("user" .
   [1 0 0 0])
  ("t/stop" .
   [0 0 0 0 0 1])
  ("term" .
   [1 0 0 0])
  ("main" .
   [12 0 0 0])
  (":swing" .
   [10 0 0 0 1 0])
  ("defrecord" .
   [3 0 0 0 0 0 0 0 0])
  ("s/clear" .
   [0 0 0 0 0 1 0])
  ("->UI" .
   [4 0 0 0])
  ("->" .
   [12 0])
  ("merge" .
   [4 0 0 0 0])
  ("->World" .
   [1 0 0 0 0 0 0])
  ("float" .
   [1 0 0 0 0])
  ("w/cut-maze" .
   [0 0 0 0 1 0 0 0 0 0])
  ("g2" .
   [7 0])
  ("rem" .
   [2 0 0])
  ("use" .
   [3 0 0])
  ("quot" .
   [1 0 0 0])
  ("location" .
   [2 0 0 0 0 0 0 0])
  (":location" .
   [2 0 0 0 0 0 0 0 0])
  ("true?" .
   [1 0 0 0 1])
  ("s" .
   [1])
  ("dec" .
   [1 0 0])
  ("change-location" .
   [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("defn" .
   [2 0 0 0])
  ("runme" .
   [1 0 0 0 0])
  ("half-x" .
   [2 0 0 0 0 0])
  ("half-y" .
   [2 0 0 0 0 0])
  (":white" .
   [1 0 0 0 0 0])
  ("#ps" .
   [1 0 0])
  ("component" .
   [10 0 0 0 0 0 0 0 0])
  ("clojure.repl" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("doc" .
   [4 0 0])
  ("params" .
   [5 0 0 0 0 0])
  ("hash-map" .
   [2 0 0 0 1 0 0 0])
  ("macroexpand" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("ps#" .
   [4 0 0])
  ("body" .
   [8 0 0 0])
  ("new-body" .
   [2 0 0 0 0 0 0 0])
  ("apply" .
   [2 0 0 0 0])
  (":a" .
   [2 0])
  (":b" .
   [2 0])
  ("body-as-map" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":c" .
   [2 0])
  ("or" .
   [2 0])
  ("string?" .
   [1 0 0 0 0 0 0])
  ("params-or-doc" .
   [0 0 0 0 0 0 1 2 0 0 0 0 0])
  ("hello" .
   [1 0 0 0 0])
  ("t1" .
   [1 0])
  ("inc" .
   [2 0 0])
  ("meta" .
   [3 0 0 0])
  ("name" .
   [1 0 0 0])
  ("clojure.core/name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("the-meta" .
   [2 0 0 0 0 0 0 0])
  ("reduce" .
   [3 0 0 0 0 0])
  ("Yair" .
   [2 0 0 0])
  ("vector" .
   [1 0 0 0 0 0])
  ("interpose" .
   [0 0 0 0 0 0 1 0 0])
  ("interleave" .
   [1 0 0 0 0 0 0 0 0 0])
  ("entities" .
   [6 0 0 0 0 0 0 0])
  ("create-entity" .
   [3 0 0 0 0 0 0 0 0 1 0 0 0])
  (":id" .
   [2 0 0])
  (":last-id" .
   [4 0 0 0 0 0 0 0])
  ("add-entity" .
   [1 0 0 0 0 0 2 0 0 0])
  ("ent-components" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("new-id" .
   [4 0 0 0 0 0])
  ("entity" .
   [6 0 0 0 0 0])
  (":entities" .
   [3 0 0 0 0 0 1 0 0])
  (":entities-by-id" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":systems" .
   [1 0 0 0 0 0 0 0])
  ("systems" .
   [1 0 0 0 0 0 0])
  ("create-game" .
   [1 0 0 1 1 0 0 0 0 0 0])
  ("position" .
   [7 0 0 0 1 0 0 0])
  ("component-kw" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("components" .
   [6 0 0 0 0 0 0 0 0 0])
  (":components" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("comp" .
   [2 0 0 0])
  ("partial" .
   [2 0 0 0 0 0 0])
  (":component-name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("some" .
   [2 0 0 0])
  ("has-component?" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":colour" .
   [1 0 0 0 0 0 0])
  (":x" .
   [3 0])
  ("as->" .
   [5 0 0 0])
  ("myv" .
   [5 0 0])
  ("*2" .
   [1 0])))
